import React, { useEffect } from 'react';
import Navbar from './Navbar';
import { useState } from 'react';


const History = ({HistoryLogs}) => {
    const[company,setCompany]=React.useState("")
    const[status,setStatus]=React.useState("")
    //temporary state to hold the history logs
    const[tempHistoryLogs,setTempHistoryLogs]=useState(HistoryLogs)
 
    var unique=[]
    //reset values if weird refresh etc
    function reset(){
        setTempHistoryLogs(HistoryLogs)
    }
    //find unique companies for dropdown
    function uniqueCompanies(){
       HistoryLogs.forEach((element) => {
          if(!unique.includes(element.Company)){
            unique.push(element.Company)
          } 
       });
    }
    uniqueCompanies();
    console.log("unique companies "+JSON.stringify(unique))
    //use effect when status or company are called
    useEffect(()=>{
        console.log("use effect called")
         if(company!==""){
            returnLogsCompany()
         }
         else if(status!==""){
            returnLogsStatus()
         }
    },[company,status])
 
    //local css
    const pStyle={borderWidth:".05em",borderStyle:"solid",padding:".5em",borderColor:"black",marginTop:"0",
        marginBottom:"0.1em",backgroundColor:"#f0f0f0",borderRadius:".5em",boxShadow:"2px 2px 5px #888888",
        opacity:".9",textAlign:"center",fontSize:"1em"}
    console.log("history logs in history log page: ",tempHistoryLogs)
    //return values based on Company
    function returnLogsCompany(){   
        console.log(JSON.stringify(company) +" at function call company")
        var match=(HistoryLogs.filter((job)=>{
            console.log(job.Company+" :job.Company "+company+" :company ")
            return(job.Company===company)
        }))
    
        setTempHistoryLogs(match)
    }
    //return values based on Status
    function returnLogsStatus(){
        var match=(HistoryLogs.filter((job)=>{
            console.log(job.Company+" :job.Company "+company+" :company ")
            return(job.status===status)
        }))
        
        setTempHistoryLogs(match)
    }
    return ( 
    <div style={{alignContent:"center",alignItems:"center"}}>
        <Navbar/>
        <h2>Any change to applications will be posted here that you made</h2>
        <h2 style={{textDecoration:"underline"}}>History Logs</h2>
        <h3 style={{marginBottom:"0"}}>Search based on your criteria</h3>
        <br/>
        {/*values generated by unique[] */}
        <label style={{fontSize:"1.5em"}}>Company:</label>{/*find by company*/}
        <select type="text" onChange={(e) => { setCompany(e.target.value) }}>
            {unique.map((element)=>{
                return <option value={element}>{`${element}`}</option>  
            })}     
        </select>

        <label style={{fontSize:"1.5em",marginLeft:"1em"}}>Status:</label>{/*find by status*/}
        <select style={{width:"20%",marginLeft:".5em"}} name="status" id="status" onChange={(e)=>{setStatus(e.target.value)}}>     
            <option value="Applied">Applied</option>  
            <option value="Rejected">Rejected</option>
            <option value="Accepted">Accepted</option>
            <option value="Interview">Interview</option>
        </select> 
        <br/>  
        <br/>
        <div >
            <p style={{textDecoration:"underline"}}>Show all results</p>
            <button onClick={reset} style={{backgroundColor:"lightgray"}}>Reset to default/results</button>
          
        </div>
        <ul style={{padding:".5em",minHeight:"fit-content",marginLeft:"10%",marginRight:"10%"}}>
            {//map through the history logs and display them
                tempHistoryLogs.length>0?tempHistoryLogs.map((job)=>{
                    //convert date with monthly date and time of day
var converted=new Date(job.timeStamp).toLocaleDateString({year:"numeric",month:"2-digit",day:"2-digit"})
+ " "+new Date(job.timeStamp).toLocaleTimeString()

                        
                    return <li key={job._id} style={{height:"auto",display:"flex",flexDirection:"column",
                    minHeight:"fit-content",margin:"2px",overflow:"auto"}}> 
                                  
                        <h2>Company: {job.Company}</h2>
                        <p style={pStyle}>description: {job.description}</p>
                        <p style={pStyle}>days since you applied: {job.daysSinceApplied}</p>
                        <p style={pStyle}>dateApplied: {job.dateApplied}</p>
                        <p style={pStyle}>Time Stamp of change in status: {converted}</p>
                        <p>Status: {job.status}</p>            
                    </li>

                }):<p>nothing found</p>
            }
        </ul>
    </div> );
}

export default History;